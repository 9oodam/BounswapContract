/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  GovToken,
  GovTokenInterface,
} from "../../../contracts/contract/GovToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_minter",
        type: "address",
      },
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_uri",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "_burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "_mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_imageUri",
        type: "string",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052601260035534801562000015575f80fd5b5060405162001c8238038062001c8283398181016040528101906200003b9190620003f0565b83838383835f90816200004f9190620006ff565b508260019081620000619190620006ff565b5062000073816200010260201b60201c565b60029081620000839190620006ff565b50620000b333600354600a6200009a919062000960565b84620000a79190620009b0565b6200013e60201b60201c565b505050508460075f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050505062000a9b565b606062000114620001b160201b60201c565b826040516020016200012892919062000a3a565b6040516020818303038152906040529050919050565b8060055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546200018c919062000a61565b925050819055508060045f828254620001a6919062000a61565b925050819055505050565b606060405180606001604052806035815260200162001c4d60359139905090565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6200020e82620001e3565b9050919050565b620002208162000202565b81146200022b575f80fd5b50565b5f815190506200023e8162000215565b92915050565b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b62000294826200024c565b810181811067ffffffffffffffff82111715620002b657620002b56200025c565b5b80604052505050565b5f620002ca620001d2565b9050620002d8828262000289565b919050565b5f67ffffffffffffffff821115620002fa57620002f96200025c565b5b62000305826200024c565b9050602081019050919050565b5f5b838110156200033157808201518184015260208101905062000314565b5f8484015250505050565b5f620003526200034c84620002dd565b620002bf565b90508281526020810184848401111562000371576200037062000248565b5b6200037e84828562000312565b509392505050565b5f82601f8301126200039d576200039c62000244565b5b8151620003af8482602086016200033c565b91505092915050565b5f819050919050565b620003cc81620003b8565b8114620003d7575f80fd5b50565b5f81519050620003ea81620003c1565b92915050565b5f805f805f60a086880312156200040c576200040b620001db565b5b5f6200041b888289016200022e565b955050602086015167ffffffffffffffff8111156200043f576200043e620001df565b5b6200044d8882890162000386565b945050604086015167ffffffffffffffff811115620004715762000470620001df565b5b6200047f8882890162000386565b93505060606200049288828901620003da565b925050608086015167ffffffffffffffff811115620004b657620004b5620001df565b5b620004c48882890162000386565b9150509295509295909350565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806200052057607f821691505b602082108103620005365762000535620004db565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026200059a7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200055d565b620005a686836200055d565b95508019841693508086168417925050509392505050565b5f819050919050565b5f620005e7620005e1620005db84620003b8565b620005be565b620003b8565b9050919050565b5f819050919050565b6200060283620005c7565b6200061a6200061182620005ee565b84845462000569565b825550505050565b5f90565b6200063062000622565b6200063d818484620005f7565b505050565b5b818110156200066457620006585f8262000626565b60018101905062000643565b5050565b601f821115620006b3576200067d816200053c565b62000688846200054e565b8101602085101562000698578190505b620006b0620006a7856200054e565b83018262000642565b50505b505050565b5f82821c905092915050565b5f620006d55f1984600802620006b8565b1980831691505092915050565b5f620006ef8383620006c4565b9150826002028217905092915050565b6200070a82620004d1565b67ffffffffffffffff8111156200072657620007256200025c565b5b62000732825462000508565b6200073f82828562000668565b5f60209050601f83116001811462000775575f841562000760578287015190505b6200076c8582620006e2565b865550620007db565b601f19841662000785866200053c565b5f5b82811015620007ae5784890151825560018201915060208501945060208101905062000787565b86831015620007ce5784890151620007ca601f891682620006c4565b8355505b6001600288020188555050505b505050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f808291508390505b60018511156200086d57808604811115620008455762000844620007e3565b5b6001851615620008555780820291505b8081029050620008658562000810565b945062000825565b94509492505050565b5f8262000887576001905062000959565b8162000896575f905062000959565b8160018114620008af5760028114620008ba57620008f0565b600191505062000959565b60ff841115620008cf57620008ce620007e3565b5b8360020a915084821115620008e957620008e8620007e3565b5b5062000959565b5060208310610133831016604e8410600b84101617156200092a5782820a905083811115620009245762000923620007e3565b5b62000959565b6200093984848460016200081c565b92509050818404811115620009535762000952620007e3565b5b81810290505b9392505050565b5f6200096c82620003b8565b91506200097983620003b8565b9250620009a87fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff848462000876565b905092915050565b5f620009bc82620003b8565b9150620009c983620003b8565b9250828202620009d981620003b8565b91508282048414831517620009f357620009f2620007e3565b5b5092915050565b5f81905092915050565b5f62000a1082620004d1565b62000a1c8185620009fa565b935062000a2e81856020860162000312565b80840191505092915050565b5f62000a47828562000a04565b915062000a55828462000a04565b91508190509392505050565b5f62000a6d82620003b8565b915062000a7a83620003b8565b925082820190508082111562000a955762000a94620007e3565b5b92915050565b6111a48062000aa95f395ff3fe608060405234801561000f575f80fd5b50600436106100fe575f3560e01c806355b6ed5c116100955780639dc29fac116100645780639dc29fac146102d0578063a9059cbb146102ec578063dd62ed3e1461031c578063eac989f81461034c576100fe565b806355b6ed5c146102365780636161eb181461026657806370a082311461028257806395d89b41146102b2576100fe565b806327e235e3116100d157806327e235e31461019e57806340c10f19146101ce5780634cf12d26146101ea5780634e6ec2471461021a576100fe565b806306fdde0314610102578063095ea7b31461012057806318160ddd1461015057806323b872dd1461016e575b5f80fd5b61010a61036a565b6040516101179190610c01565b60405180910390f35b61013a60048036038101906101359190610cbf565b6103f5565b6040516101479190610d17565b60405180910390f35b61015861047d565b6040516101659190610d3f565b60405180910390f35b61018860048036038101906101839190610d58565b610483565b6040516101959190610d17565b60405180910390f35b6101b860048036038101906101b39190610da8565b610647565b6040516101c59190610d3f565b60405180910390f35b6101e860048036038101906101e39190610cbf565b61065c565b005b61020460048036038101906101ff9190610eff565b6106f9565b6040516102119190610c01565b60405180910390f35b610234600480360381019061022f9190610cbf565b61072b565b005b610250600480360381019061024b9190610f46565b61079a565b60405161025d9190610d3f565b60405180910390f35b610280600480360381019061027b9190610cbf565b6107ba565b005b61029c60048036038101906102979190610da8565b610829565b6040516102a99190610d3f565b60405180910390f35b6102ba61086f565b6040516102c79190610c01565b60405180910390f35b6102ea60048036038101906102e59190610cbf565b6108fb565b005b61030660048036038101906103019190610cbf565b610998565b6040516103139190610d17565b60405180910390f35b61033660048036038101906103319190610f46565b610a49565b6040516103439190610d3f565b60405180910390f35b610354610acb565b6040516103619190610c01565b60405180910390f35b5f805461037690610fb1565b80601f01602080910402602001604051908101604052809291908181526020018280546103a290610fb1565b80156103ed5780601f106103c4576101008083540402835291602001916103ed565b820191905f5260205f20905b8154815290600101906020018083116103d057829003601f168201915b505050505081565b5f8160065f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055506001905092915050565b60045481565b5f8160065f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20541015610508575f80fd5b8160065f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461058f919061100e565b925050819055508160055f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546105e2919061100e565b925050819055508160055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546106359190611041565b92505081905550600190509392505050565b6005602052805f5260405f205f915090505481565b60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106e2906110be565b60405180910390fd5b6106f5828261072b565b5050565b6060610703610b57565b82604051602001610715929190611116565b6040516020818303038152906040529050919050565b8060055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546107779190611041565b925050819055508060045f82825461078f9190611041565b925050819055505050565b6006602052815f5260405f20602052805f5260405f205f91509150505481565b8060055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610806919061100e565b925050819055508060045f82825461081e919061100e565b925050819055505050565b5f60055f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6001805461087c90610fb1565b80601f01602080910402602001604051908101604052809291908181526020018280546108a890610fb1565b80156108f35780601f106108ca576101008083540402835291602001916108f3565b820191905f5260205f20905b8154815290600101906020018083116108d657829003601f168201915b505050505081565b60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461098a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610981906110be565b60405180910390fd5b61099482826107ba565b5050565b5f8160055f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546109e5919061100e565b925050819055508160055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610a389190611041565b925050819055506001905092915050565b5f60065f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b60028054610ad890610fb1565b80601f0160208091040260200160405190810160405280929190818152602001828054610b0490610fb1565b8015610b4f5780601f10610b2657610100808354040283529160200191610b4f565b820191905f5260205f20905b815481529060010190602001808311610b3257829003601f168201915b505050505081565b606060405180606001604052806035815260200161113a60359139905090565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015610bae578082015181840152602081019050610b93565b5f8484015250505050565b5f601f19601f8301169050919050565b5f610bd382610b77565b610bdd8185610b81565b9350610bed818560208601610b91565b610bf681610bb9565b840191505092915050565b5f6020820190508181035f830152610c198184610bc9565b905092915050565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610c5b82610c32565b9050919050565b610c6b81610c51565b8114610c75575f80fd5b50565b5f81359050610c8681610c62565b92915050565b5f819050919050565b610c9e81610c8c565b8114610ca8575f80fd5b50565b5f81359050610cb981610c95565b92915050565b5f8060408385031215610cd557610cd4610c2a565b5b5f610ce285828601610c78565b9250506020610cf385828601610cab565b9150509250929050565b5f8115159050919050565b610d1181610cfd565b82525050565b5f602082019050610d2a5f830184610d08565b92915050565b610d3981610c8c565b82525050565b5f602082019050610d525f830184610d30565b92915050565b5f805f60608486031215610d6f57610d6e610c2a565b5b5f610d7c86828701610c78565b9350506020610d8d86828701610c78565b9250506040610d9e86828701610cab565b9150509250925092565b5f60208284031215610dbd57610dbc610c2a565b5b5f610dca84828501610c78565b91505092915050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b610e1182610bb9565b810181811067ffffffffffffffff82111715610e3057610e2f610ddb565b5b80604052505050565b5f610e42610c21565b9050610e4e8282610e08565b919050565b5f67ffffffffffffffff821115610e6d57610e6c610ddb565b5b610e7682610bb9565b9050602081019050919050565b828183375f83830152505050565b5f610ea3610e9e84610e53565b610e39565b905082815260208101848484011115610ebf57610ebe610dd7565b5b610eca848285610e83565b509392505050565b5f82601f830112610ee657610ee5610dd3565b5b8135610ef6848260208601610e91565b91505092915050565b5f60208284031215610f1457610f13610c2a565b5b5f82013567ffffffffffffffff811115610f3157610f30610c2e565b5b610f3d84828501610ed2565b91505092915050565b5f8060408385031215610f5c57610f5b610c2a565b5b5f610f6985828601610c78565b9250506020610f7a85828601610c78565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680610fc857607f821691505b602082108103610fdb57610fda610f84565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61101882610c8c565b915061102383610c8c565b925082820390508181111561103b5761103a610fe1565b5b92915050565b5f61104b82610c8c565b915061105683610c8c565b925082820190508082111561106e5761106d610fe1565b5b92915050565b7f6e6f74206d696e746572000000000000000000000000000000000000000000005f82015250565b5f6110a8600a83610b81565b91506110b382611074565b602082019050919050565b5f6020820190508181035f8301526110d58161109c565b9050919050565b5f81905092915050565b5f6110f082610b77565b6110fa81856110dc565b935061110a818560208601610b91565b80840191505092915050565b5f61112182856110e6565b915061112d82846110e6565b9150819050939250505056fe68747470733a2f2f6372696d736f6e2d67656e65726f75732d616e742d3339352e6d7970696e6174612e636c6f75642f697066732fa264697066735822122019ab9e3e72ee0ba3a36c6f203be773d0d53ca63a5200befb4ba5bf116583e7ab64736f6c6343000814003368747470733a2f2f6372696d736f6e2d67656e65726f75732d616e742d3339352e6d7970696e6174612e636c6f75642f697066732f";

type GovTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GovTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GovToken__factory extends ContractFactory {
  constructor(...args: GovTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _minter: AddressLike,
    _name: string,
    _symbol: string,
    _amount: BigNumberish,
    _uri: string,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _minter,
      _name,
      _symbol,
      _amount,
      _uri,
      overrides || {}
    );
  }
  override deploy(
    _minter: AddressLike,
    _name: string,
    _symbol: string,
    _amount: BigNumberish,
    _uri: string,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _minter,
      _name,
      _symbol,
      _amount,
      _uri,
      overrides || {}
    ) as Promise<
      GovToken & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): GovToken__factory {
    return super.connect(runner) as GovToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GovTokenInterface {
    return new Interface(_abi) as GovTokenInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): GovToken {
    return new Contract(address, _abi, runner) as unknown as GovToken;
  }
}
