/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type { WBNC, WBNCInterface } from "../../../contracts/contract/WBNC";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_uri",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawal",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "_burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "_mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_imageUri",
        type: "string",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFromTo",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405260126003553480156200001657600080fd5b5060405162001ec138038062001ec183398181016040528101906200003c91906200037f565b8383838383600090816200005191906200068f565b5082600190816200006391906200068f565b506200007581620000dd60201b60201c565b600290816200008591906200068f565b50600073f39fd6e51aad88f6f4ce6ab8827279cfffb922669050620000ce33600354600a620000b59190620008f9565b85620000c291906200094a565b6200011960201b60201c565b50505050505050505062000a3a565b6060620000ef6200019060201b60201c565b8260405160200162000103929190620009d7565b6040516020818303038152906040529050919050565b80600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546200016a9190620009ff565b925050819055508060046000828254620001859190620009ff565b925050819055505050565b606060405180606001604052806035815260200162001e8c60359139905090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200021a82620001cf565b810181811067ffffffffffffffff821117156200023c576200023b620001e0565b5b80604052505050565b600062000251620001b1565b90506200025f82826200020f565b919050565b600067ffffffffffffffff821115620002825762000281620001e0565b5b6200028d82620001cf565b9050602081019050919050565b60005b83811015620002ba5780820151818401526020810190506200029d565b60008484015250505050565b6000620002dd620002d78462000264565b62000245565b905082815260208101848484011115620002fc57620002fb620001ca565b5b620003098482856200029a565b509392505050565b600082601f830112620003295762000328620001c5565b5b81516200033b848260208601620002c6565b91505092915050565b6000819050919050565b620003598162000344565b81146200036557600080fd5b50565b60008151905062000379816200034e565b92915050565b600080600080608085870312156200039c576200039b620001bb565b5b600085015167ffffffffffffffff811115620003bd57620003bc620001c0565b5b620003cb8782880162000311565b945050602085015167ffffffffffffffff811115620003ef57620003ee620001c0565b5b620003fd8782880162000311565b9350506040620004108782880162000368565b925050606085015167ffffffffffffffff811115620004345762000433620001c0565b5b620004428782880162000311565b91505092959194509250565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620004a157607f821691505b602082108103620004b757620004b662000459565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620005217fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620004e2565b6200052d8683620004e2565b95508019841693508086168417925050509392505050565b6000819050919050565b6000620005706200056a620005648462000344565b62000545565b62000344565b9050919050565b6000819050919050565b6200058c836200054f565b620005a46200059b8262000577565b848454620004ef565b825550505050565b600090565b620005bb620005ac565b620005c881848462000581565b505050565b5b81811015620005f057620005e4600082620005b1565b600181019050620005ce565b5050565b601f8211156200063f576200060981620004bd565b6200061484620004d2565b8101602085101562000624578190505b6200063c6200063385620004d2565b830182620005cd565b50505b505050565b600082821c905092915050565b6000620006646000198460080262000644565b1980831691505092915050565b60006200067f838362000651565b9150826002028217905092915050565b6200069a826200044e565b67ffffffffffffffff811115620006b657620006b5620001e0565b5b620006c2825462000488565b620006cf828285620005f4565b600060209050601f831160018114620007075760008415620006f2578287015190505b620006fe858262000671565b8655506200076e565b601f1984166200071786620004bd565b60005b8281101562000741578489015182556001820191506020850194506020810190506200071a565b868310156200076157848901516200075d601f89168262000651565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008160011c9050919050565b6000808291508390505b60018511156200080457808604811115620007dc57620007db62000776565b5b6001851615620007ec5780820291505b8081029050620007fc85620007a5565b9450620007bc565b94509492505050565b6000826200081f5760019050620008f2565b816200082f5760009050620008f2565b8160018114620008485760028114620008535762000889565b6001915050620008f2565b60ff84111562000868576200086762000776565b5b8360020a91508482111562000882576200088162000776565b5b50620008f2565b5060208310610133831016604e8410600b8410161715620008c35782820a905083811115620008bd57620008bc62000776565b5b620008f2565b620008d28484846001620007b2565b92509050818404811115620008ec57620008eb62000776565b5b81810290505b9392505050565b6000620009068262000344565b9150620009138362000344565b9250620009427fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846200080d565b905092915050565b6000620009578262000344565b9150620009648362000344565b9250828202620009748162000344565b915082820484148315176200098e576200098d62000776565b5b5092915050565b600081905092915050565b6000620009ad826200044e565b620009b9818562000995565b9350620009cb8185602086016200029a565b80840191505092915050565b6000620009e58285620009a0565b9150620009f38284620009a0565b91508190509392505050565b600062000a0c8262000344565b915062000a198362000344565b925082820190508082111562000a345762000a3362000776565b5b92915050565b6114428062000a4a6000396000f3fe6080604052600436106100fe5760003560e01c806355b6ed5c1161009557806370a082311161006457806370a082311461035157806395d89b411461038e578063a9059cbb146103b9578063dd62ed3e146103f6578063eac989f814610433576100fe565b806355b6ed5c14610292578063579952fc146102cf5780636161eb181461030c57806369328dec14610335576100fe565b806327e235e3116100d157806327e235e3146101d357806347e7ef24146102105780634cf12d261461022c5780634e6ec24714610269576100fe565b806306fdde0314610103578063095ea7b31461012e57806318160ddd1461016b57806323b872dd14610196575b600080fd5b34801561010f57600080fd5b5061011861045e565b6040516101259190610e27565b60405180910390f35b34801561013a57600080fd5b5061015560048036038101906101509190610ef1565b6104ec565b6040516101629190610f4c565b60405180910390f35b34801561017757600080fd5b50610180610579565b60405161018d9190610f76565b60405180910390f35b3480156101a257600080fd5b506101bd60048036038101906101b89190610f91565b61057f565b6040516101ca9190610f4c565b60405180910390f35b3480156101df57600080fd5b506101fa60048036038101906101f59190610fe4565b610754565b6040516102079190610f76565b60405180910390f35b61022a60048036038101906102259190610ef1565b61076c565b005b34801561023857600080fd5b50610253600480360381019061024e9190611146565b6107c8565b6040516102609190610e27565b60405180910390f35b34801561027557600080fd5b50610290600480360381019061028b9190610ef1565b6107fa565b005b34801561029e57600080fd5b506102b960048036038101906102b4919061118f565b61086d565b6040516102c69190610f76565b60405180910390f35b3480156102db57600080fd5b506102f660048036038101906102f19190610f91565b610892565b6040516103039190610f4c565b60405180910390f35b34801561031857600080fd5b50610333600480360381019061032e9190610ef1565b61094b565b005b61034f600480360381019061034a91906111cf565b6109be565b005b34801561035d57600080fd5b5061037860048036038101906103739190610fe4565b610ad3565b6040516103859190610f76565b60405180910390f35b34801561039a57600080fd5b506103a3610b1c565b6040516103b09190610e27565b60405180910390f35b3480156103c557600080fd5b506103e060048036038101906103db9190610ef1565b610baa565b6040516103ed9190610f4c565b60405180910390f35b34801561040257600080fd5b5061041d6004803603810190610418919061118f565b610c62565b60405161042a9190610f76565b60405180910390f35b34801561043f57600080fd5b50610448610ce9565b6040516104559190610e27565b60405180910390f35b6000805461046b90611251565b80601f016020809104026020016040519081016040528092919081815260200182805461049790611251565b80156104e45780601f106104b9576101008083540402835291602001916104e4565b820191906000526020600020905b8154815290600101906020018083116104c757829003601f168201915b505050505081565b600081600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506001905092915050565b60045481565b600081600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101561060a57600080fd5b81600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461069691906112b1565b9250508190555081600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546106ec91906112b1565b9250508190555081600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461074291906112e5565b92505081905550600190509392505050565b60056020528060005260406000206000915090505481565b61077682826107fa565b8173ffffffffffffffffffffffffffffffffffffffff167fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c826040516107bc9190610f76565b60405180910390a25050565b60606107d2610d77565b826040516020016107e4929190611355565b6040516020818303038152906040529050919050565b80600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461084991906112e5565b92505081905550806004600082825461086291906112e5565b925050819055505050565b6006602052816000526040600020602052806000526040600020600091509150505481565b600081600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546108e391906112b1565b9250508190555081600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461093991906112e5565b92505081905550600190509392505050565b80600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461099a91906112b1565b9250508190555080600460008282546109b391906112b1565b925050819055505050565b6109c8838361094b565b8073ffffffffffffffffffffffffffffffffffffffff1682600067ffffffffffffffff8111156109fb576109fa61101b565b5b6040519080825280601f01601f191660200182016040528015610a2d5781602001600182028036833780820191505090505b50604051610a3b91906113c0565b60006040518083038185875af1925050503d8060008114610a78576040519150601f19603f3d011682016040523d82523d6000602084013e610a7d565b606091505b5050508273ffffffffffffffffffffffffffffffffffffffff167f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b6583604051610ac69190610f76565b60405180910390a2505050565b6000600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60018054610b2990611251565b80601f0160208091040260200160405190810160405280929190818152602001828054610b5590611251565b8015610ba25780601f10610b7757610100808354040283529160200191610ba2565b820191906000526020600020905b815481529060010190602001808311610b8557829003601f168201915b505050505081565b600081600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610bfb91906112b1565b9250508190555081600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610c5191906112e5565b925050819055506001905092915050565b6000600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60028054610cf690611251565b80601f0160208091040260200160405190810160405280929190818152602001828054610d2290611251565b8015610d6f5780601f10610d4457610100808354040283529160200191610d6f565b820191906000526020600020905b815481529060010190602001808311610d5257829003601f168201915b505050505081565b60606040518060600160405280603581526020016113d860359139905090565b600081519050919050565b600082825260208201905092915050565b60005b83811015610dd1578082015181840152602081019050610db6565b60008484015250505050565b6000601f19601f8301169050919050565b6000610df982610d97565b610e038185610da2565b9350610e13818560208601610db3565b610e1c81610ddd565b840191505092915050565b60006020820190508181036000830152610e418184610dee565b905092915050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610e8882610e5d565b9050919050565b610e9881610e7d565b8114610ea357600080fd5b50565b600081359050610eb581610e8f565b92915050565b6000819050919050565b610ece81610ebb565b8114610ed957600080fd5b50565b600081359050610eeb81610ec5565b92915050565b60008060408385031215610f0857610f07610e53565b5b6000610f1685828601610ea6565b9250506020610f2785828601610edc565b9150509250929050565b60008115159050919050565b610f4681610f31565b82525050565b6000602082019050610f616000830184610f3d565b92915050565b610f7081610ebb565b82525050565b6000602082019050610f8b6000830184610f67565b92915050565b600080600060608486031215610faa57610fa9610e53565b5b6000610fb886828701610ea6565b9350506020610fc986828701610ea6565b9250506040610fda86828701610edc565b9150509250925092565b600060208284031215610ffa57610ff9610e53565b5b600061100884828501610ea6565b91505092915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61105382610ddd565b810181811067ffffffffffffffff821117156110725761107161101b565b5b80604052505050565b6000611085610e49565b9050611091828261104a565b919050565b600067ffffffffffffffff8211156110b1576110b061101b565b5b6110ba82610ddd565b9050602081019050919050565b82818337600083830152505050565b60006110e96110e484611096565b61107b565b90508281526020810184848401111561110557611104611016565b5b6111108482856110c7565b509392505050565b600082601f83011261112d5761112c611011565b5b813561113d8482602086016110d6565b91505092915050565b60006020828403121561115c5761115b610e53565b5b600082013567ffffffffffffffff81111561117a57611179610e58565b5b61118684828501611118565b91505092915050565b600080604083850312156111a6576111a5610e53565b5b60006111b485828601610ea6565b92505060206111c585828601610ea6565b9150509250929050565b6000806000606084860312156111e8576111e7610e53565b5b60006111f686828701610ea6565b935050602061120786828701610edc565b925050604061121886828701610ea6565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061126957607f821691505b60208210810361127c5761127b611222565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006112bc82610ebb565b91506112c783610ebb565b92508282039050818111156112df576112de611282565b5b92915050565b60006112f082610ebb565b91506112fb83610ebb565b925082820190508082111561131357611312611282565b5b92915050565b600081905092915050565b600061132f82610d97565b6113398185611319565b9350611349818560208601610db3565b80840191505092915050565b60006113618285611324565b915061136d8284611324565b91508190509392505050565b600081519050919050565b600081905092915050565b600061139a82611379565b6113a48185611384565b93506113b4818560208601610db3565b80840191505092915050565b60006113cc828461138f565b91508190509291505056fe68747470733a2f2f6372696d736f6e2d67656e65726f75732d616e742d3339352e6d7970696e6174612e636c6f75642f697066732fa264697066735822122062da748823b3efd9966a9b4b009df215a02fae77178d33cb1c325c9369bdf41764736f6c6343000814003368747470733a2f2f6372696d736f6e2d67656e65726f75732d616e742d3339352e6d7970696e6174612e636c6f75642f697066732f";

type WBNCConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WBNCConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WBNC__factory extends ContractFactory {
  constructor(...args: WBNCConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _name: string,
    _symbol: string,
    _amount: BigNumberish,
    _uri: string,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _name,
      _symbol,
      _amount,
      _uri,
      overrides || {}
    );
  }
  override deploy(
    _name: string,
    _symbol: string,
    _amount: BigNumberish,
    _uri: string,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _name,
      _symbol,
      _amount,
      _uri,
      overrides || {}
    ) as Promise<
      WBNC & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): WBNC__factory {
    return super.connect(runner) as WBNC__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WBNCInterface {
    return new Interface(_abi) as WBNCInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): WBNC {
    return new Contract(address, _abi, runner) as unknown as WBNC;
  }
}
