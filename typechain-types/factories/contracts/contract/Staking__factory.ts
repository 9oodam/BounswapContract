/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  Staking,
  StakingInterface,
} from "../../../contracts/contract/Staking";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_BNCToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_data",
        type: "address",
      },
      {
        internalType: "address",
        name: "_dev0Addr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_dev0Percent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_stakingPercent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_BNCPerBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_startBlock",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_initialOwner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ClaimBNC",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "EmergencyWithdraw",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "dev0Addr",
        type: "address",
      },
    ],
    name: "SetDev0Address",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "stakingPercent",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "dev0Percent",
        type: "uint256",
      },
    ],
    name: "SetPercent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "BNCPerBlock",
        type: "uint256",
      },
    ],
    name: "UpdateBNCPerBlock",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "BNC",
    outputs: [
      {
        internalType: "contract WBNC",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "BNCPerBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "BONUS_MULTIPLIER",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_allocPoint",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_lpToken",
        type: "address",
      },
    ],
    name: "addStakingPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
    ],
    name: "claimBNC",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "data",
    outputs: [
      {
        internalType: "contract Data",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "dev0Addr",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "dev0Percent",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
    ],
    name: "emergencyWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_from",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_to",
        type: "uint256",
      },
    ],
    name: "getMultiplier",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastBlockDevWithdraw",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "massUpdatePools",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "pendingBNC",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "percentDec",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "poolInfo",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "lpToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allocPoint",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastRewardBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "accBNCPerShare",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poolLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_allocPoint",
        type: "uint256",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_dev0Addr",
        type: "address",
      },
    ],
    name: "setDevAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_stakingPercent",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_dev0Percent",
        type: "uint256",
      },
    ],
    name: "setPercent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stakingPercent",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "startBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalAllocPoint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newAmount",
        type: "uint256",
      },
    ],
    name: "updateBNCPerBlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
    ],
    name: "updatePool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "exactRewardCal",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pendingReward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_pid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawDevFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405261271060045560016009555f600d553480156200001f575f80fd5b5060405162002c8038038062002c80833981810160405281019062000045919062000321565b805f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000b9575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000b09190620003f6565b60405180910390fd5b620000ca81620001c360201b60201c565b50600180819055508760025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508660035f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508560075f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555084600681905550836005819055508260088190555081600e8190555081600a81905550505050505050505062000411565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f620002b38262000288565b9050919050565b620002c581620002a7565b8114620002d0575f80fd5b50565b5f81519050620002e381620002ba565b92915050565b5f819050919050565b620002fd81620002e9565b811462000308575f80fd5b50565b5f815190506200031b81620002f2565b92915050565b5f805f805f805f80610100898b03121562000341576200034062000284565b5b5f620003508b828c01620002d3565b9850506020620003638b828c01620002d3565b9750506040620003768b828c01620002d3565b9650506060620003898b828c016200030b565b95505060806200039c8b828c016200030b565b94505060a0620003af8b828c016200030b565b93505060c0620003c28b828c016200030b565b92505060e0620003d58b828c01620002d3565b9150509295985092959890939650565b620003f081620002a7565b82525050565b5f6020820190506200040b5f830184620003e5565b92915050565b612861806200041f5f395ff3fe608060405234801561000f575f80fd5b50600436106101e3575f3560e01c80638aa285501161010d578063be1193ea116100a0578063e2bbb1581161006f578063e2bbb15814610510578063e88e0e3a1461052c578063f29588c71461054a578063f2fde38b14610568576101e3565b8063be1193ea146104ae578063c6a37cb8146104cc578063cb93f7ef146104ea578063d0d41fe1146104f4576101e3565b80639586712a116100dc5780639586712a1461043a578063a5981e7b14610456578063b76e360c14610472578063bd62a7d914610490576101e3565b80638aa285501461039c5780638da5cb5b146103ba5780638dbb1e3a146103d857806393f1a40b14610408576101e3565b80634e0f4e9f11610185578063715018a611610154578063715018a61461033c57806373d4a13a146103465780637709fc4b146103645780638a50bb3614610380576101e3565b80634e0f4e9f146102ca57806351eb05a6146102fa5780635312ea8e14610316578063630b5ba114610332576101e3565b80631ab06ee5116101c15780631ab06ee51461025657806321b1aecb14610272578063441a3e701461029057806348cd4cb1146102ac576101e3565b8063081e3eda146101e75780631526fe271461020557806317caf6f114610238575b5f80fd5b6101ef610584565b6040516101fc9190611f34565b60405180910390f35b61021f600480360381019061021a9190611f7b565b610590565b60405161022f9493929190612020565b60405180910390f35b6102406105ea565b60405161024d9190611f34565b60405180910390f35b610270600480360381019061026b9190612063565b6105f0565b005b61027a6106b7565b6040516102879190611f34565b60405180910390f35b6102aa60048036038101906102a59190612063565b6106bd565b005b6102b461091e565b6040516102c19190611f34565b60405180910390f35b6102e460048036038101906102df91906120dc565b610924565b6040516102f19190611f34565b60405180910390f35b610314600480360381019061030f9190611f7b565b610b6a565b005b610330600480360381019061032b9190611f7b565b610dc0565b005b61033a610f9d565b005b610344610fce565b005b61034e610fe1565b60405161035b919061213a565b60405180910390f35b61037e60048036038101906103799190611f7b565b611006565b005b61039a60048036038101906103959190611f7b565b6110e7565b005b6103a461121e565b6040516103b19190611f34565b60405180910390f35b6103c2611224565b6040516103cf9190612162565b60405180910390f35b6103f260048036038101906103ed9190612063565b61124b565b6040516103ff9190611f34565b60405180910390f35b610422600480360381019061041d91906120dc565b61126d565b6040516104319392919061217b565b60405180910390f35b610454600480360381019061044f91906120dc565b61129e565b005b610470600480360381019061046b9190612063565b6113a9565b005b61047a611455565b6040516104879190611f34565b60405180910390f35b61049861145b565b6040516104a59190611f34565b60405180910390f35b6104b6611461565b6040516104c39190611f34565b60405180910390f35b6104d4611467565b6040516104e19190611f34565b60405180910390f35b6104f261146d565b005b61050e600480360381019061050991906121b0565b61159d565b005b61052a60048036038101906105259190612063565b6116ba565b005b6105346118d7565b6040516105419190612162565b60405180910390f35b6105526118fc565b60405161055f91906121fb565b60405180910390f35b610582600480360381019061057d91906121b0565b611921565b005b5f600b80549050905090565b600b818154811061059f575f80fd5b905f5260205f2090600402015f91509050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154908060030154905084565b600d5481565b6105f86119a5565b81600b805490508110610640576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106379061226e565b60405180910390fd5b610648610f9d565b81600b848154811061065d5761065c61228c565b5b905f5260205f20906004020160010154600d5461067a91906122e6565b6106849190612319565b600d8190555081600b848154811061069f5761069e61228c565b5b905f5260205f20906004020160010181905550505050565b60045481565b6106c5611a2c565b81600b80549050811061070d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107049061226e565b60405180910390fd5b5f600b84815481106107225761072161228c565b5b905f5260205f20906004020190505f600c5f8681526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20905083815f015410156107c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107bc90612396565b60405180910390fd5b6107ce85610b6a565b6107d88533611a72565b5f8411156108955783815f01546107ef91906122e6565b815f0181905550815f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33866040518363ffffffff1660e01b81526004016108539291906123b4565b6020604051808303815f875af115801561086f573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108939190612410565b505b64e8d4a510008260030154825f01546108ae919061243b565b6108b891906124a9565b8160010181905550843373ffffffffffffffffffffffffffffffffffffffff167ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568866040516109079190611f34565b60405180910390a350505061091a611b8a565b5050565b600e5481565b5f82600b80549050811061096d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109649061226e565b60405180910390fd5b5f600b85815481106109825761098161228c565b5b905f5260205f20906004020190505f600c5f8781526020019081526020015f205f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090505f826003015490505f835f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610a439190612162565b602060405180830381865afa158015610a5e573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a8291906124ed565b9050836002015443118015610a9757505f8114155b15610b20575f610aab85600201544361124b565b90505f600454600554600d54886001015460085486610aca919061243b565b610ad4919061243b565b610ade91906124a9565b610ae8919061243b565b610af291906124a9565b90508264e8d4a5100082610b06919061243b565b610b1091906124a9565b84610b1b9190612319565b935050505b826001015464e8d4a5100083855f0154610b3a919061243b565b610b4491906124a9565b8460020154610b539190612319565b610b5d91906122e6565b9550505050505092915050565b80600b805490508110610bb2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ba99061226e565b60405180910390fd5b5f600b8381548110610bc757610bc661228c565b5b905f5260205f209060040201905080600201544311610be65750610dbc565b5f815f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610c429190612162565b602060405180830381865afa158015610c5d573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c8191906124ed565b90505f8111610c9a574382600201819055505050610dbc565b5f610ca983600201544361124b565b90505f600454600554600d54866001015460085486610cc8919061243b565b610cd2919061243b565b610cdc91906124a9565b610ce6919061243b565b610cf091906124a9565b905060025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634e6ec24730836040518363ffffffff1660e01b8152600401610d4e9291906123b4565b5f604051808303815f87803b158015610d65575f80fd5b505af1158015610d77573d5f803e3d5ffd5b505050508264e8d4a5100082610d8d919061243b565b610d9791906124a9565b8460030154610da69190612319565b8460030181905550438460020181905550505050505b5050565b610dc8611a2c565b80600b805490508110610e10576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e079061226e565b60405180910390fd5b5f600b8381548110610e2557610e2461228c565b5b905f5260205f20906004020190505f600c5f8581526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f209050815f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33835f01546040518363ffffffff1660e01b8152600401610ee29291906123b4565b6020604051808303815f875af1158015610efe573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610f229190612410565b50833373ffffffffffffffffffffffffffffffffffffffff167fbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae0595835f0154604051610f6d9190611f34565b60405180910390a35f815f01819055505f81600101819055505f8160020181905550505050610f9a611b8a565b50565b5f600b8054905090505f5b81811015610fca57610fb981610b6a565b80610fc390612518565b9050610fa8565b5050565b610fd66119a5565b610fdf5f611b93565b565b60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61100e6119a5565b68056bc75e2d6310000081111561105a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611051906125a9565b60405180910390fd5b66038d7ea4c680008110156110a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161109b90612611565b60405180910390fd5b806008819055507f1e19929b3cb970f6d66d05a2698000db2ac7eafe495aee2c6c32bd7960a97ead6008546040516110dc9190611f34565b60405180910390a150565b6110ef611a2c565b80600b805490508110611137576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161112e9061226e565b60405180910390fd5b61114082610b6a565b61114a8233611a72565b5f600c5f8481526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090505f81600201541115611211575f816002015490505f82600201819055506111c03382611c54565b833373ffffffffffffffffffffffffffffffffffffffff167f9da87e8cce29a4140e89780f6e64e0b1cd58e4fa1cb5ee53effe97264f290c6c836040516112079190611f34565b60405180910390a3505b505061121b611b8a565b50565b60095481565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f6009548361125a919061243b565b8261126591906122e6565b905092915050565b600c602052815f5260405f20602052805f5260405f205f9150915050805f0154908060010154908060020154905083565b6112a66119a5565b6112af81611e3d565b6112b7610f9d565b5f600e5443106112c757436112cb565b600e545b905082600d546112db9190612319565b600d81905550600b60405180608001604052808473ffffffffffffffffffffffffffffffffffffffff1681526020018581526020018381526020015f815250908060018154018082558091505060019003905f5260205f2090600402015f909190919091505f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020155606082015181600301555050505050565b6113b16119a5565b5f81905060045481846113c49190612319565b1115611405576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113fc90612679565b60405180910390fd5b82600581905550816006819055507fcbd554161f22a88862569b669f84507adc410008353e0a023297d3ea419126f7600554600654604051611448929190612697565b60405180910390a1505050565b600a5481565b60065481565b60055481565b60085481565b43600a54106114b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114a890612708565b60405180910390fd5b5f600854600a54436114c391906122e6565b6114cd919061243b565b905060025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634e6ec24760075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff166004546006548561153f919061243b565b61154991906124a9565b6040518363ffffffff1660e01b81526004016115669291906123b4565b5f604051808303815f87803b15801561157d575f80fd5b505af115801561158f573d5f803e3d5ffd5b5050505043600a8190555050565b6115a56119a5565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611613576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161160a90612770565b60405180910390fd5b8060075f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fb1c7911ca1455735ffd17fec398b65f34157a7b58831b586878f5d3c2cf44ee260405160405180910390a250565b6116c2611a2c565b81600b80549050811061170a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117019061226e565b60405180910390fd5b5f600b848154811061171f5761171e61228c565b5b905f5260205f20906004020190505f600c5f8681526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20905061178585610b6a565b61178f8533611a72565b5f84111561184e57815f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330876040518463ffffffff1660e01b81526004016117f69392919061278e565b6020604051808303815f875af1158015611812573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906118369190612410565b5083815f01546118469190612319565b815f01819055505b64e8d4a510008260030154825f0154611867919061243b565b61187191906124a9565b8160010181905550843373ffffffffffffffffffffffffffffffffffffffff167f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15866040516118c09190611f34565b60405180910390a35050506118d3611b8a565b5050565b60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6119296119a5565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611999575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016119909190612162565b60405180910390fd5b6119a281611b93565b50565b6119ad611f15565b73ffffffffffffffffffffffffffffffffffffffff166119cb611224565b73ffffffffffffffffffffffffffffffffffffffff1614611a2a576119ee611f15565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401611a219190612162565b60405180910390fd5b565b600260015403611a68576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600181905550565b81600b805490508110611aba576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ab19061226e565b60405180910390fd5b5f600b8481548110611acf57611ace61228c565b5b905f5260205f20906004020190505f600c5f8681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090505f816001015464e8d4a510008460030154845f0154611b4b919061243b565b611b5591906124a9565b611b5f91906122e6565b90505f811115611b8257808260020154611b799190612319565b82600201819055505b505050505050565b60018081905550565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166327e235e3306040518263ffffffff1660e01b8152600401611caf9190612162565b602060405180830381865afa158015611cca573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611cee91906124ed565b905080821115611d9a5760025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84836040518363ffffffff1660e01b8152600401611d549291906123b4565b6020604051808303815f875af1158015611d70573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611d949190612410565b50611e38565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84846040518363ffffffff1660e01b8152600401611df69291906123b4565b6020604051808303815f875af1158015611e12573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611e369190612410565b505b505050565b5f600b8054905090505f5b81811015611f10578273ffffffffffffffffffffffffffffffffffffffff16600b8281548110611e7b57611e7a61228c565b5b905f5260205f2090600402015f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603611eff576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ef69061280d565b60405180910390fd5b80611f0990612518565b9050611e48565b505050565b5f33905090565b5f819050919050565b611f2e81611f1c565b82525050565b5f602082019050611f475f830184611f25565b92915050565b5f80fd5b611f5a81611f1c565b8114611f64575f80fd5b50565b5f81359050611f7581611f51565b92915050565b5f60208284031215611f9057611f8f611f4d565b5b5f611f9d84828501611f67565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f819050919050565b5f611fe8611fe3611fde84611fa6565b611fc5565b611fa6565b9050919050565b5f611ff982611fce565b9050919050565b5f61200a82611fef565b9050919050565b61201a81612000565b82525050565b5f6080820190506120335f830187612011565b6120406020830186611f25565b61204d6040830185611f25565b61205a6060830184611f25565b95945050505050565b5f806040838503121561207957612078611f4d565b5b5f61208685828601611f67565b925050602061209785828601611f67565b9150509250929050565b5f6120ab82611fa6565b9050919050565b6120bb816120a1565b81146120c5575f80fd5b50565b5f813590506120d6816120b2565b92915050565b5f80604083850312156120f2576120f1611f4d565b5b5f6120ff85828601611f67565b9250506020612110858286016120c8565b9150509250929050565b5f61212482611fef565b9050919050565b6121348161211a565b82525050565b5f60208201905061214d5f83018461212b565b92915050565b61215c816120a1565b82525050565b5f6020820190506121755f830184612153565b92915050565b5f60608201905061218e5f830186611f25565b61219b6020830185611f25565b6121a86040830184611f25565b949350505050565b5f602082840312156121c5576121c4611f4d565b5b5f6121d2848285016120c8565b91505092915050565b5f6121e582611fef565b9050919050565b6121f5816121db565b82525050565b5f60208201905061220e5f8301846121ec565b92915050565b5f82825260208201905092915050565b7f706f6f6c206e6f742065786973740000000000000000000000000000000000005f82015250565b5f612258600e83612214565b915061226382612224565b602082019050919050565b5f6020820190508181035f8301526122858161224c565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6122f082611f1c565b91506122fb83611f1c565b9250828203905081811115612313576123126122b9565b5b92915050565b5f61232382611f1c565b915061232e83611f1c565b9250828201905080821115612346576123456122b9565b5b92915050565b7f77697468647261773a206e6f7420676f6f6400000000000000000000000000005f82015250565b5f612380601283612214565b915061238b8261234c565b602082019050919050565b5f6020820190508181035f8301526123ad81612374565b9050919050565b5f6040820190506123c75f830185612153565b6123d46020830184611f25565b9392505050565b5f8115159050919050565b6123ef816123db565b81146123f9575f80fd5b50565b5f8151905061240a816123e6565b92915050565b5f6020828403121561242557612424611f4d565b5b5f612432848285016123fc565b91505092915050565b5f61244582611f1c565b915061245083611f1c565b925082820261245e81611f1c565b91508282048414831517612475576124746122b9565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6124b382611f1c565b91506124be83611f1c565b9250826124ce576124cd61247c565b5b828204905092915050565b5f815190506124e781611f51565b92915050565b5f6020828403121561250257612501611f4d565b5b5f61250f848285016124d9565b91505092915050565b5f61252282611f1c565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612554576125536122b9565b5b600182019050919050565b7f4d61782070657220626c6f636b2031303020424e4300000000000000000000005f82015250565b5f612593601583612214565b915061259e8261255f565b602082019050919050565b5f6020820190508181035f8301526125c081612587565b9050919050565b7f4d696e2070657220626c6f636b20302e30303120424e430000000000000000005f82015250565b5f6125fb601783612214565b9150612606826125c7565b602082019050919050565b5f6020820190508181035f830152612628816125ef565b9050919050565b7f50657263656e742053756d0000000000000000000000000000000000000000005f82015250565b5f612663600b83612214565b915061266e8261262f565b602082019050919050565b5f6020820190508181035f83015261269081612657565b9050919050565b5f6040820190506126aa5f830185611f25565b6126b76020830184611f25565b9392505050565b7f7761697420666f72206e657720626c6f636b00000000000000000000000000005f82015250565b5f6126f2601283612214565b91506126fd826126be565b602082019050919050565b5f6020820190508181035f83015261271f816126e6565b9050919050565b7f5a65726f000000000000000000000000000000000000000000000000000000005f82015250565b5f61275a600483612214565b915061276582612726565b602082019050919050565b5f6020820190508181035f8301526127878161274e565b9050919050565b5f6060820190506127a15f830186612153565b6127ae6020830185612153565b6127bb6040830184611f25565b949350505050565b7f706f6f6c206578697374656400000000000000000000000000000000000000005f82015250565b5f6127f7600c83612214565b9150612802826127c3565b602082019050919050565b5f6020820190508181035f830152612824816127eb565b905091905056fea2646970667358221220ae216525aaf43d5ac12e585adad1939bad280d98280c99ef997841184d989e8a64736f6c63430008140033";

type StakingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StakingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Staking__factory extends ContractFactory {
  constructor(...args: StakingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _BNCToken: AddressLike,
    _data: AddressLike,
    _dev0Addr: AddressLike,
    _dev0Percent: BigNumberish,
    _stakingPercent: BigNumberish,
    _BNCPerBlock: BigNumberish,
    _startBlock: BigNumberish,
    _initialOwner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _BNCToken,
      _data,
      _dev0Addr,
      _dev0Percent,
      _stakingPercent,
      _BNCPerBlock,
      _startBlock,
      _initialOwner,
      overrides || {}
    );
  }
  override deploy(
    _BNCToken: AddressLike,
    _data: AddressLike,
    _dev0Addr: AddressLike,
    _dev0Percent: BigNumberish,
    _stakingPercent: BigNumberish,
    _BNCPerBlock: BigNumberish,
    _startBlock: BigNumberish,
    _initialOwner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _BNCToken,
      _data,
      _dev0Addr,
      _dev0Percent,
      _stakingPercent,
      _BNCPerBlock,
      _startBlock,
      _initialOwner,
      overrides || {}
    ) as Promise<
      Staking & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Staking__factory {
    return super.connect(runner) as Staking__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StakingInterface {
    return new Interface(_abi) as StakingInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Staking {
    return new Contract(address, _abi, runner) as unknown as Staking;
  }
}
