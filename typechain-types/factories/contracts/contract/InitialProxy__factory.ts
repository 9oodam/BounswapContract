/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  InitialProxy,
  InitialProxyInterface,
} from "../../../contracts/contract/InitialProxy";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_factoryAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_swapAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_wbncAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "data",
        type: "bytes[]",
      },
    ],
    name: "check",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "num",
        type: "uint256",
      },
    ],
    name: "checkcheck",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
    ],
    name: "factoryCreatePair",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
    ],
    name: "factorySetValidator",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getNum",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "data",
        type: "bytes[]",
      },
    ],
    name: "initialPlay",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "data",
        type: "bytes[]",
      },
    ],
    name: "initialPlayPayable",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
    ],
    name: "poolMint",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pairAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "outputAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxToken",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "inputToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "outputToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
    ],
    name: "swapBNCForExactTokens",
    outputs: [
      {
        internalType: "bool",
        name: "result",
        type: "bool",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pairAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "inputAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minToken",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "inputToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "outputToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
    ],
    name: "swapExactBNCForTokens",
    outputs: [
      {
        internalType: "bool",
        name: "result",
        type: "bool",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526001600260146101000a81548160ff0219169083151502179055506001600260156101000a81548160ff021916908315150217905550600a6003553480156200004c57600080fd5b5060405162001a5538038062001a558339818101604052810190620000729190620001a7565b826000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505062000203565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200016f8262000142565b9050919050565b620001818162000162565b81146200018d57600080fd5b50565b600081519050620001a18162000176565b92915050565b600080600060608486031215620001c357620001c26200013d565b5b6000620001d38682870162000190565b9350506020620001e68682870162000190565b9250506040620001f98682870162000190565b9150509250925092565b61184280620002136000396000f3fe6080604052600436106100915760003560e01c80637fb708d5116100595780637fb708d51461019b578063a9c1583b146101cb578063c1e6688014610208578063f968350c14610245578063f9cc2cc81461028257610091565b806345056c821461009657806347d7c6e4146100c65780636462ec9e1461010357806367e0badb146101335780637e0febd11461015e575b600080fd5b6100b060048036038101906100ab91906110aa565b6102bf565b6040516100bd919061110e565b60405180910390f35b3480156100d257600080fd5b506100ed60048036038101906100e89190611187565b6103e5565b6040516100fa919061110e565b60405180910390f35b61011d60048036038101906101189190611210565b610514565b60405161012a919061110e565b60405180910390f35b34801561013f57600080fd5b50610148610627565b60405161015591906112ac565b60405180910390f35b34801561016a57600080fd5b5061018560048036038101906101809190611187565b61063c565b604051610192919061110e565b60405180910390f35b6101b560048036038101906101b09190611210565b6106ec565b6040516101c2919061110e565b60405180910390f35b3480156101d757600080fd5b506101f260048036038101906101ed91906110aa565b610810565b6040516101ff919061110e565b60405180910390f35b34801561021457600080fd5b5061022f600480360381019061022a91906112c7565b610902565b60405161023c919061110e565b60405180910390f35b34801561025157600080fd5b5061026c600480360381019061026791906112f4565b610964565b604051610279919061110e565b60405180910390f35b34801561028e57600080fd5b506102a960048036038101906102a491906110aa565b610a26565b6040516102b6919061110e565b60405180910390f35b600080600090505b82518110156103db5760011515600260159054906101000a900460ff16151514610326576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161031d90611391565b60405180910390fd5b60003073ffffffffffffffffffffffffffffffffffffffff16848381518110610352576103516113b1565b5b60200260200101516040516103679190611451565b6000604051808303816000865af19150503d80600081146103a4576040519150601f19603f3d011682016040523d82523d6000602084013e6103a9565b606091505b5050905080600260156101000a81548160ff0219169083151502179055505080806103d390611497565b9150506102c7565b5060019050919050565b60008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b4f69a2f85856040518363ffffffff1660e01b81526004016104439291906114ee565b6020604051808303816000875af1158015610462573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610486919061152c565b905060008173ffffffffffffffffffffffffffffffffffffffff16636a627842876040518263ffffffff1660e01b81526004016104c39190611559565b6020604051808303816000875af11580156104e2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061050691906115a0565b905080925050509392505050565b60008060405180604001604052808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152509050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638c4898a9888a8a8a86896040518763ffffffff1660e01b81526004016105ea959493929190611678565b6000604051808303818588803b15801561060357600080fd5b505af1158015610617573d6000803e3d6000fd5b5050505050509695505050505050565b6000610634600354610b17565b600354905090565b60008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166398eac0098686866040518463ffffffff1660e01b815260040161069c939291906116cb565b6020604051808303816000875af11580156106bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106df91906115a0565b9050809150509392505050565b60008060405180604001604052808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152509050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d5083e64878a8a85886040518663ffffffff1660e01b81526004016107c09493929190611702565b60206040518083038185885af11580156107de573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061080391906115a0565b9150509695505050505050565b60006108506040518060400160405280600281526020017f696e000000000000000000000000000000000000000000000000000000000000815250610bb0565b60005b82518110156108fc5761086581610b17565b3073ffffffffffffffffffffffffffffffffffffffff1683828151811061088f5761088e6113b1565b5b60200260200101516040516108a49190611451565b6000604051808303816000865af19150503d80600081146108e1576040519150601f19603f3d011682016040523d82523d6000602084013e6108e6565b606091505b50505080806108f490611497565b915050610853565b50919050565b60006109436040518060400160405280600681526020017f6e756d203a20000000000000000000000000000000000000000000000000000081525083610c49565b6003600081548092919061095690611497565b919050555060019050919050565b60006109708383610ce5565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c9c6539685856040518363ffffffff1660e01b81526004016109ce9291906114ee565b6020604051808303816000875af11580156109ed573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a1191906115a0565b9050610a1c81610d81565b8091505092915050565b600080600090505b8251811015610b1157610a766040518060400160405280600e81526020017f636865636b207374617274203a2000000000000000000000000000000000000081525082610c49565b60003073ffffffffffffffffffffffffffffffffffffffff16848381518110610aa257610aa16113b1565b5b6020026020010151604051610ab79190611451565b6000604051808303816000865af19150503d8060008114610af4576040519150601f19603f3d011682016040523d82523d6000602084013e610af9565b606091505b50509050508080610b0990611497565b915050610a2e565b50919050565b610bad81604051602401610b2b91906112ac565b6040516020818303038152906040527ff82c50f1000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610e1a565b50565b610c4681604051602401610bc4919061178b565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610e1a565b50565b610ce18282604051602401610c5f9291906117ad565b6040516020818303038152906040527fb60e72cc000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610e1a565b5050565b610d7d8282604051602401610cfb9291906114ee565b6040516020818303038152906040527fdaf0d4aa000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610e1a565b5050565b610e1781604051602401610d95919061110e565b6040516020818303038152906040527f32458eed000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610e1a565b50565b610e3181610e29610e34610e55565b63ffffffff16565b50565b60006a636f6e736f6c652e6c6f679050600080835160208501845afa505050565b610e60819050919050565b610e686117dd565b565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610ecc82610e83565b810181811067ffffffffffffffff82111715610eeb57610eea610e94565b5b80604052505050565b6000610efe610e6a565b9050610f0a8282610ec3565b919050565b600067ffffffffffffffff821115610f2a57610f29610e94565b5b602082029050602081019050919050565b600080fd5b600080fd5b600067ffffffffffffffff821115610f6057610f5f610e94565b5b610f6982610e83565b9050602081019050919050565b82818337600083830152505050565b6000610f98610f9384610f45565b610ef4565b905082815260208101848484011115610fb457610fb3610f40565b5b610fbf848285610f76565b509392505050565b600082601f830112610fdc57610fdb610e7e565b5b8135610fec848260208601610f85565b91505092915050565b600061100861100384610f0f565b610ef4565b9050808382526020820190506020840283018581111561102b5761102a610f3b565b5b835b8181101561107257803567ffffffffffffffff8111156110505761104f610e7e565b5b80860161105d8982610fc7565b8552602085019450505060208101905061102d565b5050509392505050565b600082601f83011261109157611090610e7e565b5b81356110a1848260208601610ff5565b91505092915050565b6000602082840312156110c0576110bf610e74565b5b600082013567ffffffffffffffff8111156110de576110dd610e79565b5b6110ea8482850161107c565b91505092915050565b60008115159050919050565b611108816110f3565b82525050565b600060208201905061112360008301846110ff565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061115482611129565b9050919050565b61116481611149565b811461116f57600080fd5b50565b6000813590506111818161115b565b92915050565b6000806000606084860312156111a05761119f610e74565b5b60006111ae86828701611172565b93505060206111bf86828701611172565b92505060406111d086828701611172565b9150509250925092565b6000819050919050565b6111ed816111da565b81146111f857600080fd5b50565b60008135905061120a816111e4565b92915050565b60008060008060008060c0878903121561122d5761122c610e74565b5b600061123b89828a01611172565b965050602061124c89828a016111fb565b955050604061125d89828a016111fb565b945050606061126e89828a01611172565b935050608061127f89828a01611172565b92505060a061129089828a01611172565b9150509295509295509295565b6112a6816111da565b82525050565b60006020820190506112c1600083018461129d565b92915050565b6000602082840312156112dd576112dc610e74565b5b60006112eb848285016111fb565b91505092915050565b6000806040838503121561130b5761130a610e74565b5b600061131985828601611172565b925050602061132a85828601611172565b9150509250929050565b600082825260208201905092915050565b7f46756e6374696f6e206661696c65640000000000000000000000000000000000600082015250565b600061137b600f83611334565b915061138682611345565b602082019050919050565b600060208201905081810360008301526113aa8161136e565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600081519050919050565b600081905092915050565b60005b838110156114145780820151818401526020810190506113f9565b60008484015250505050565b600061142b826113e0565b61143581856113eb565b93506114458185602086016113f6565b80840191505092915050565b600061145d8284611420565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006114a2826111da565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036114d4576114d3611468565b5b600182019050919050565b6114e881611149565b82525050565b600060408201905061150360008301856114df565b61151060208301846114df565b9392505050565b6000815190506115268161115b565b92915050565b60006020828403121561154257611541610e74565b5b600061155084828501611517565b91505092915050565b600060208201905061156e60008301846114df565b92915050565b61157d816110f3565b811461158857600080fd5b50565b60008151905061159a81611574565b92915050565b6000602082840312156115b6576115b5610e74565b5b60006115c48482850161158b565b91505092915050565b600060029050919050565b600081905092915050565b6000819050919050565b6115f681611149565b82525050565b600061160883836115ed565b60208301905092915050565b6000602082019050919050565b61162a816115cd565b61163481846115d8565b925061163f826115e3565b8060005b8381101561167057815161165787826115fc565b965061166283611614565b925050600181019050611643565b505050505050565b600060c08201905061168d60008301886114df565b61169a602083018761129d565b6116a7604083018661129d565b6116b46060830185611621565b6116c160a08301846114df565b9695505050505050565b60006060820190506116e060008301866114df565b6116ed60208301856114df565b6116fa60408301846114df565b949350505050565b600060a08201905061171760008301876114df565b611724602083018661129d565b6117316040830185611621565b61173e60808301846114df565b95945050505050565b600081519050919050565b600061175d82611747565b6117678185611334565b93506117778185602086016113f6565b61178081610e83565b840191505092915050565b600060208201905081810360008301526117a58184611752565b905092915050565b600060408201905081810360008301526117c78185611752565b90506117d6602083018461129d565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052605160045260246000fdfea2646970667358221220a6493b490a6184a6e67c54b58516ad78b03b4892a1142c209e9dc7cd66d3443a64736f6c63430008140033";

type InitialProxyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: InitialProxyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class InitialProxy__factory extends ContractFactory {
  constructor(...args: InitialProxyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _factoryAddress: AddressLike,
    _swapAddress: AddressLike,
    _wbncAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _factoryAddress,
      _swapAddress,
      _wbncAddress,
      overrides || {}
    );
  }
  override deploy(
    _factoryAddress: AddressLike,
    _swapAddress: AddressLike,
    _wbncAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _factoryAddress,
      _swapAddress,
      _wbncAddress,
      overrides || {}
    ) as Promise<
      InitialProxy & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): InitialProxy__factory {
    return super.connect(runner) as InitialProxy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): InitialProxyInterface {
    return new Interface(_abi) as InitialProxyInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): InitialProxy {
    return new Contract(address, _abi, runner) as unknown as InitialProxy;
  }
}
