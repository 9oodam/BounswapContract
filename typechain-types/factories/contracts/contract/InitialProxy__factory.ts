/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  InitialProxy,
  InitialProxyInterface,
} from "../../../contracts/contract/InitialProxy";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_factoryAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_swapAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_wbncAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
] as const;

const _bytecode =
  "0x60806040526001600260146101000a81548160ff0219169083151502179055506001600260156101000a81548160ff021916908315150217905550600a60035534801561004b57600080fd5b5060405161023a38038061023a833981810160405281019061006d919061019a565b826000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050506101ed565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101678261013c565b9050919050565b6101778161015c565b811461018257600080fd5b50565b6000815190506101948161016e565b92915050565b6000806000606084860312156101b3576101b2610137565b5b60006101c186828701610185565b93505060206101d286828701610185565b92505060406101e386828701610185565b9150509250925092565b603f806101fb6000396000f3fe6080604052600080fdfea2646970667358221220b27d34fd7ee0ef8753f3477ba09dbeb3f650fcbaa722ee29d0354c6c841cfe4864736f6c63430008140033";

type InitialProxyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: InitialProxyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class InitialProxy__factory extends ContractFactory {
  constructor(...args: InitialProxyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _factoryAddress: AddressLike,
    _swapAddress: AddressLike,
    _wbncAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _factoryAddress,
      _swapAddress,
      _wbncAddress,
      overrides || {}
    );
  }
  override deploy(
    _factoryAddress: AddressLike,
    _swapAddress: AddressLike,
    _wbncAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _factoryAddress,
      _swapAddress,
      _wbncAddress,
      overrides || {}
    ) as Promise<
      InitialProxy & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): InitialProxy__factory {
    return super.connect(runner) as InitialProxy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): InitialProxyInterface {
    return new Interface(_abi) as InitialProxyInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): InitialProxy {
    return new Contract(address, _abi, runner) as unknown as InitialProxy;
  }
}
