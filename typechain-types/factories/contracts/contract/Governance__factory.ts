/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  Governance,
  GovernanceInterface,
} from "../../../contracts/contract/Governance";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_govToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "getProposal",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_proposer",
        type: "address",
      },
    ],
    name: "propose",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "voter",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_support",
        type: "bool",
      },
    ],
    name: "vote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "votingPeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526001600355348015610014575f80fd5b50604051610dc4380380610dc4833981810160405281019061003691906100d9565b805f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610104565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6100a88261007f565b9050919050565b6100b88161009e565b81146100c2575f80fd5b50565b5f815190506100d3816100af565b92915050565b5f602082840312156100ee576100ed61007b565b5b5f6100fb848285016100c5565b91505092915050565b610cb3806101115f395ff3fe608060405234801561000f575f80fd5b506004361061004a575f3560e01c8063012679511461004e57806302a251a31461006a578063c7f758a814610088578063e2cdd42a146100bb575b5f80fd5b610068600480360381019061006391906107f1565b6100d7565b005b6100726102e9565b60405161007f9190610834565b60405180910390f35b6100a2600480360381019061009d9190610877565b6102f2565b6040516100b294939291906108b1565b60405180910390f35b6100d560048036038101906100d09190610929565b6103b3565b005b60015f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231836040518263ffffffff1660e01b81526004016101319190610979565b602060405180830381865afa15801561014c573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061017091906109a6565b10156101b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101a890610a2b565b60405180910390fd5b60015f8154809291906101c390610a76565b91905055505f6002600154815481106101df576101de610abd565b5b905f5260205f2090600702019050600154815f018190555081816001015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555043816004018190555061024a6102e9565b436102559190610aea565b81600501819055505f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636161eb188360016040518363ffffffff1660e01b81526004016102b8929190610b5f565b5f604051808303815f87803b1580156102cf575f80fd5b505af11580156102e1573d5f803e3d5ffd5b505050505050565b5f619d80905090565b5f805f806002858154811061030a57610309610abd565b5b905f5260205f2090600702015f01546002868154811061032d5761032c610abd565b5b905f5260205f2090600702016001015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600287815481106103705761036f610abd565b5b905f5260205f209060070201600201546002888154811061039457610393610abd565b5b905f5260205f2090600702016003015493509350935093509193509193565b6001600354146103f8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ef90610bd0565b60405180910390fd5b5f6003819055505f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231846040518263ffffffff1660e01b81526004016104599190610979565b602060405180830381865afa158015610474573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061049891906109a6565b905060018110156104de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d590610a2b565b60405180910390fd5b5f1515600285815481106104f5576104f4610abd565b5b905f5260205f2090600702016006015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015f9054906101000a900460ff16151514610590576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058790610c38565b60405180910390fd5b81156105d45780600285815481106105ab576105aa610abd565b5b905f5260205f2090600702016002015f8282546105c89190610aea565b9250508190555061060e565b80600285815481106105e9576105e8610abd565b5b905f5260205f2090600702016003015f8282546106069190610aea565b925050819055505b60016002858154811061062457610623610abd565b5b905f5260205f2090600702016006015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015f6101000a81548160ff021916908315150217905550816002858154811061069b5761069a610abd565b5b905f5260205f2090600702016006015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f0160016101000a81548160ff0219169083151502179055505f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636161eb1884836040518363ffffffff1660e01b8152600401610758929190610c56565b5f604051808303815f87803b15801561076f575f80fd5b505af1158015610781573d5f803e3d5ffd5b50505050506001600381905550505050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6107c082610797565b9050919050565b6107d0816107b6565b81146107da575f80fd5b50565b5f813590506107eb816107c7565b92915050565b5f6020828403121561080657610805610793565b5b5f610813848285016107dd565b91505092915050565b5f819050919050565b61082e8161081c565b82525050565b5f6020820190506108475f830184610825565b92915050565b6108568161081c565b8114610860575f80fd5b50565b5f813590506108718161084d565b92915050565b5f6020828403121561088c5761088b610793565b5b5f61089984828501610863565b91505092915050565b6108ab816107b6565b82525050565b5f6080820190506108c45f830187610825565b6108d160208301866108a2565b6108de6040830185610825565b6108eb6060830184610825565b95945050505050565b5f8115159050919050565b610908816108f4565b8114610912575f80fd5b50565b5f81359050610923816108ff565b92915050565b5f805f606084860312156109405761093f610793565b5b5f61094d86828701610863565b935050602061095e868287016107dd565b925050604061096f86828701610915565b9150509250925092565b5f60208201905061098c5f8301846108a2565b92915050565b5f815190506109a08161084d565b92915050565b5f602082840312156109bb576109ba610793565b5b5f6109c884828501610992565b91505092915050565b5f82825260208201905092915050565b7f676f76546f6b656e0000000000000000000000000000000000000000000000005f82015250565b5f610a156008836109d1565b9150610a20826109e1565b602082019050919050565b5f6020820190508181035f830152610a4281610a09565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610a808261081c565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610ab257610ab1610a49565b5b600182019050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f610af48261081c565b9150610aff8361081c565b9250828201905080821115610b1757610b16610a49565b5b92915050565b5f819050919050565b5f819050919050565b5f610b49610b44610b3f84610b1d565b610b26565b61081c565b9050919050565b610b5981610b2f565b82525050565b5f604082019050610b725f8301856108a2565b610b7f6020830184610b50565b9392505050565b7f4c4f434b454400000000000000000000000000000000000000000000000000005f82015250565b5f610bba6006836109d1565b9150610bc582610b86565b602082019050919050565b5f6020820190508181035f830152610be781610bae565b9050919050565b7f616c726561647920766f746564000000000000000000000000000000000000005f82015250565b5f610c22600d836109d1565b9150610c2d82610bee565b602082019050919050565b5f6020820190508181035f830152610c4f81610c16565b9050919050565b5f604082019050610c695f8301856108a2565b610c766020830184610825565b939250505056fea26469706673582212201334ed936dfb0d224310db225ef9028a432fd33a2b6b9ce030f5fbc65b15d48464736f6c63430008140033";

type GovernanceConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GovernanceConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Governance__factory extends ContractFactory {
  constructor(...args: GovernanceConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _govToken: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_govToken, overrides || {});
  }
  override deploy(
    _govToken: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_govToken, overrides || {}) as Promise<
      Governance & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Governance__factory {
    return super.connect(runner) as Governance__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GovernanceInterface {
    return new Interface(_abi) as GovernanceInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Governance {
    return new Contract(address, _abi, runner) as unknown as Governance;
  }
}
