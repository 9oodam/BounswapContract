/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  Governance,
  GovernanceInterface,
} from "../../../contracts/contract/Governance";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_govToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "getProposal",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_proposer",
        type: "address",
      },
    ],
    name: "propose",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "voter",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_support",
        type: "bool",
      },
    ],
    name: "vote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "votingPeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052600160035534801561001557600080fd5b50604051610e46380380610e46833981810160405281019061003791906100e0565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061010d565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100ad82610082565b9050919050565b6100bd816100a2565b81146100c857600080fd5b50565b6000815190506100da816100b4565b92915050565b6000602082840312156100f6576100f561007d565b5b6000610104848285016100cb565b91505092915050565b610d2a8061011c6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063012679511461005157806302a251a31461006d578063c7f758a81461008b578063e2cdd42a146100be575b600080fd5b61006b60048036038101906100669190610838565b6100da565b005b6100756102fb565b604051610082919061087e565b60405180910390f35b6100a560048036038101906100a091906108c5565b610305565b6040516100b59493929190610901565b60405180910390f35b6100d860048036038101906100d3919061097e565b6103d2565b005b600160008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231836040518263ffffffff1660e01b815260040161013591906109d1565b602060405180830381865afa158015610152573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101769190610a01565b10156101b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101ae90610a8b565b60405180910390fd5b600160008154809291906101ca90610ada565b919050555060006002600154815481106101e7576101e6610b22565b5b906000526020600020906007020190506001548160000181905550818160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055504381600401819055506102566102fb565b436102619190610b51565b816005018190555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636161eb188360016040518363ffffffff1660e01b81526004016102c5929190610bca565b600060405180830381600087803b1580156102df57600080fd5b505af11580156102f3573d6000803e3d6000fd5b505050505050565b6000619d80905090565b6000806000806002858154811061031f5761031e610b22565b5b9060005260206000209060070201600001546002868154811061034557610344610b22565b5b906000526020600020906007020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166002878154811061038b5761038a610b22565b5b906000526020600020906007020160020154600288815481106103b1576103b0610b22565b5b90600052602060002090600702016003015493509350935093509193509193565b600160035414610417576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040e90610c3f565b60405180910390fd5b600060038190555060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231846040518263ffffffff1660e01b815260040161047b91906109d1565b602060405180830381865afa158015610498573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104bc9190610a01565b90506001811015610502576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104f990610a8b565b60405180910390fd5b600015156002858154811061051a57610519610b22565b5b906000526020600020906007020160060160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff161515146105bb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105b290610cab565b60405180910390fd5b81156106025780600285815481106105d6576105d5610b22565b5b906000526020600020906007020160020160008282546105f69190610b51565b9250508190555061063f565b806002858154811061061757610616610b22565b5b906000526020600020906007020160030160008282546106379190610b51565b925050819055505b60016002858154811061065557610654610b22565b5b906000526020600020906007020160060160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff02191690831515021790555081600285815481106106d2576106d1610b22565b5b906000526020600020906007020160060160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160016101000a81548160ff02191690831515021790555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636161eb1884836040518363ffffffff1660e01b8152600401610795929190610ccb565b600060405180830381600087803b1580156107af57600080fd5b505af11580156107c3573d6000803e3d6000fd5b50505050506001600381905550505050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610805826107da565b9050919050565b610815816107fa565b811461082057600080fd5b50565b6000813590506108328161080c565b92915050565b60006020828403121561084e5761084d6107d5565b5b600061085c84828501610823565b91505092915050565b6000819050919050565b61087881610865565b82525050565b6000602082019050610893600083018461086f565b92915050565b6108a281610865565b81146108ad57600080fd5b50565b6000813590506108bf81610899565b92915050565b6000602082840312156108db576108da6107d5565b5b60006108e9848285016108b0565b91505092915050565b6108fb816107fa565b82525050565b6000608082019050610916600083018761086f565b61092360208301866108f2565b610930604083018561086f565b61093d606083018461086f565b95945050505050565b60008115159050919050565b61095b81610946565b811461096657600080fd5b50565b60008135905061097881610952565b92915050565b600080600060608486031215610997576109966107d5565b5b60006109a5868287016108b0565b93505060206109b686828701610823565b92505060406109c786828701610969565b9150509250925092565b60006020820190506109e660008301846108f2565b92915050565b6000815190506109fb81610899565b92915050565b600060208284031215610a1757610a166107d5565b5b6000610a25848285016109ec565b91505092915050565b600082825260208201905092915050565b7f676f76546f6b656e000000000000000000000000000000000000000000000000600082015250565b6000610a75600883610a2e565b9150610a8082610a3f565b602082019050919050565b60006020820190508181036000830152610aa481610a68565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610ae582610865565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610b1757610b16610aab565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610b5c82610865565b9150610b6783610865565b9250828201905080821115610b7f57610b7e610aab565b5b92915050565b6000819050919050565b6000819050919050565b6000610bb4610baf610baa84610b85565b610b8f565b610865565b9050919050565b610bc481610b99565b82525050565b6000604082019050610bdf60008301856108f2565b610bec6020830184610bbb565b9392505050565b7f4c4f434b45440000000000000000000000000000000000000000000000000000600082015250565b6000610c29600683610a2e565b9150610c3482610bf3565b602082019050919050565b60006020820190508181036000830152610c5881610c1c565b9050919050565b7f616c726561647920766f74656400000000000000000000000000000000000000600082015250565b6000610c95600d83610a2e565b9150610ca082610c5f565b602082019050919050565b60006020820190508181036000830152610cc481610c88565b9050919050565b6000604082019050610ce060008301856108f2565b610ced602083018461086f565b939250505056fea264697066735822122001f18c5d31f936059857aa01c0738e8e93e99224e104a95036f128933abd6ab764736f6c63430008140033";

type GovernanceConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GovernanceConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Governance__factory extends ContractFactory {
  constructor(...args: GovernanceConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _govToken: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_govToken, overrides || {});
  }
  override deploy(
    _govToken: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_govToken, overrides || {}) as Promise<
      Governance & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Governance__factory {
    return super.connect(runner) as Governance__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GovernanceInterface {
    return new Interface(_abi) as GovernanceInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Governance {
    return new Contract(address, _abi, runner) as unknown as Governance;
  }
}
